# Generated by Django 5.2.5 on 2025-08-26 09:59

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0008_alter_user_company_alter_user_inn_alter_user_rating_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CarrierPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('scope', models.SmallIntegerField(choices=[(1, "Respublika bo'yicha"), (2, 'Xalqaro')])),
                ('primary_route_1', models.CharField(max_length=150)),
                ('primary_route_2', models.CharField(blank=True, max_length=150, null=True)),
                ('primary_route_3', models.CharField(blank=True, max_length=150, null=True)),
                ('international_routes', models.TextField(blank=True, help_text="Masalan: O'zbekiston–Qozog'iston; O'zbekiston–Rossiya ...", null=True)),
                ('cargo_types', models.JSONField(default=list, help_text="CargoType qiymatlari ro'yxati (masalan: [1,2,3])")),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to='common.user')),
            ],
            options={
                'verbose_name': 'Yuk tashish preferensiyasi',
                'verbose_name_plural': 'Yuk tashish preferensiyalari',
            },
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('registered_at', models.DateField(blank=True, null=True)),
                ('inn', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator('^\\d{9,12}$', "STIR/INN 9–12 xonali bo'lishi kerak.")])),
                ('legal_address', models.CharField(max_length=255)),
                ('director_full_name', models.CharField(max_length=150)),
                ('responsible_full_name', models.CharField(blank=True, max_length=150, null=True)),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(\\+?998|998)?\\s?\\d{2}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}$', "Telefon raqamini +998 ** ** ** ** ko'rinishida kiriting.")])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('employees_total', models.PositiveIntegerField(default=0)),
                ('drivers_total', models.PositiveIntegerField(default=0)),
                ('stability_rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_profile', to='common.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Consent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('charter_agreed', models.BooleanField(default=False, help_text="Uyushma Ustavini o'qib, rozilik")),
                ('personal_data_processing', models.BooleanField(default=False, help_text="Shaxsiy ma'lumotlarni qayta ishlashga rozilik")),
                ('agreed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='consent', to='common.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MembershipApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('full_name', models.CharField(max_length=150)),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(\\+?998|998)?\\s?\\d{2}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}$', "Telefon raqamini +998 ** ** ** ** ko'rinishida kiriting.")])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='applications')),
                ('status', models.CharField(default='new', max_length=30)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership_applications', to='common.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('passport_number', models.CharField(blank=True, help_text='AA1234567', max_length=9, null=True, validators=[django.core.validators.RegexValidator('^[A-Z]{2}\\d{7}$', "Pasport seriya va raqami (masalan, AA1234567) ko'rinishida bo'lishi kerak.")])),
                ('passport_given_at', models.DateField(blank=True, null=True)),
                ('passport_issuer', models.CharField(blank=True, max_length=120, null=True)),
                ('region', models.SmallIntegerField(blank=True, choices=[(1, 'Toshkent shahri'), (2, 'Andijon'), (3, 'Buxoro'), (4, 'Fargʻona'), (5, 'Jizzax'), (6, 'Xorazm'), (7, 'Namangan'), (8, 'Navoiy'), (9, 'Qashqadaryo'), (10, 'Qoraqalpogʻiston Respublikasi'), (12, 'Sirdaryo'), (13, 'Surxondaryo'), (14, 'Toshkent viloyati')], null=True)),
                ('district', models.CharField(blank=True, max_length=120, null=True)),
                ('street', models.CharField(blank=True, max_length=120, null=True)),
                ('house', models.CharField(blank=True, max_length=30, null=True)),
                ('workplace_name', models.CharField(blank=True, max_length=150, null=True)),
                ('workplace_inn', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator('^\\d{9,12}$', "STIR/INN 9–12 xonali bo'lishi kerak.")])),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('has_international_visa', models.BooleanField(default=False)),
                ('extra_phone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator('^(\\+?998|998)?\\s?\\d{2}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}$', "Telefon raqamini +998 ** ** ** ** ko'rinishida kiriting.")])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='person', to='common.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='user_docs')),
                ('document_type', models.SmallIntegerField(choices=[(1, 'Pasport nusxasi'), (2, 'Haydovchilik guvohnomasi'), (3, 'Transport texnik pasporti'), (4, 'Korxona guvohnomasi'), (5, 'Dazvol'), (6, 'Litsenziya'), (7, "Sug'urta polis"), (8, 'Boshqa hujjat')])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doc', to='common.user')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('brand', models.CharField(max_length=80)),
                ('model', models.CharField(max_length=80)),
                ('plate_number', models.CharField(db_index=True, max_length=20)),
                ('manufactured_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1970), django.core.validators.MaxValueValidator(2026)])),
                ('fuel', models.SmallIntegerField(choices=[(1, 'Benzin'), (2, 'Dizel'), (3, 'Gaz'), (4, 'Elektr'), (5, 'Gibrid')])),
                ('tech_passport_number', models.CharField(max_length=50)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=50, null=True)),
                ('insurance_valid_until', models.DateField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='common.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trailer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('brand', models.CharField(max_length=80)),
                ('model', models.CharField(max_length=80)),
                ('plate_number', models.CharField(db_index=True, max_length=20)),
                ('manufactured_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1970), django.core.validators.MaxValueValidator(2026)])),
                ('capacity_tons', models.DecimalField(decimal_places=2, help_text='tonnada', max_digits=6)),
                ('tech_passport_number', models.CharField(max_length=50)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trailers', to='common.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
